{"version":3,"file":"static/js/884.8b2c5162.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/Contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactList/ContactList.jsx"],"sourcesContent":["import { Input } from 'antd';\nimport styled from 'styled-components';\n\nexport const WrapperFiler = styled.div`\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled(Input)`\n  height: 40px;\n  width: 230px;\n  padding: 0 10px;\n  font-size: 20px;\n  border: 1px solid #000000;\n  border-radius: 7px;\n  transition: box-shadow cubic-bezier(0.17, 0.67, 0.86, 0.57) 300ms;\n`;\n\nexport const FilterP = styled.p`\n  font-weight: 500;\n  margin-bottom: 20px;\n  color: #2e2d2dbc;\n`;","import { WrapperFiler, FilterInput, FilterP } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtration } from 'redux/Contacts/filterSlice';\nimport { SearchOutlined } from '@ant-design/icons';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter); \n\n  return (\n    <WrapperFiler>\n      <FilterP>Find contacts by name</FilterP>\n\n      <FilterInput\n        prefix={<SearchOutlined />} \n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(filtration(e.target.value))} \n      />\n    </WrapperFiler>\n  );\n};","export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;","import styled from 'styled-components';\n// import { Button, Form, Input, Modal } from 'antd';\nimport { UserAddOutlined } from '@ant-design/icons';\n\n// export const FormWrap = styled(Form)`\n//   margin: 0 auto;\n// `;\n\n// export const AddModalBtn = styled(Button)`\n//   width: 100%;\n//   height: 35px;\n//   font-size: 18px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background-color: #ae1abe;\n// `;\n\n// export const UserIcon = styled(UserAddOutlined)`\n//   color: #c7c6c6;\n// `;\n\n// export const PhoneIcon = styled(PhoneOutlined)`\n//   color: #c7c6c6;\n// `;\n\n// export const InputForm = styled(Input)`\n//   height: 35px;\n//   font-size: 18px;\n//   width: 100%;\n// `;\n\n// export const AddModal = styled(Modal)`\n//   text-align: center;\n//   .ant-modal-content {\n//     width: 340px;\n//     height: 225px;\n//     position: absolute;\n//     top: 50%;\n//     left: 20%;\n//   }\n// `;\n\n// export const OpenAddModal = styled(Button)`\n//   margin: 15px 0;\n//   background-color: #ae1abe;\n// `;\nexport const AddUserIcon = styled(UserAddOutlined)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  // align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #fff;\n  border: 1px solid #000;\n  border-radius: 7px;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  margin-top: 24px;\n  padding: 20px;\n\n  background-color: #ae1abe;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { selectContactsList } from 'redux/Contacts/selectors';\nimport { addContact } from 'redux/Contacts/operation';\n\nimport { Form, Input, Label, Button, AddUserIcon } from './ContactForm.styled';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number ...\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <AddUserIcon />\n        New contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};","import {\n    Item,\n    List,\n    ButtonRedact,\n    UserIcon,\n    PhoneIcon,\n    InputForm,\n    ModalRedact,\n    UserIconList,\n    PhoneiconList,\n    DivName,\n    Spiner,\n    Title,\n    Container,\n  } from './ContactList.styled'; \n  \n  import { useDispatch, useSelector } from 'react-redux';\n  \n  import {\n    deleteContact,\n    redactContatc,\n    fetchContacts,\n  } from 'redux/Contacts/operation'; \n  \n  import { useEffect, useState } from 'react';\n  import { Filter } from 'components/Filter/Filter';\n  import { ContactForm } from 'components/ContactForm/ContactForm';\n  import { Button, Popconfirm } from 'antd'; \n  import { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n  \n  export default function Contactlist() {\n    const [subName, setSubName] = useState('');\n    const [subNumber, setSubNumber] = useState('');\n    const [subId, setSubId] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const dispatch = useDispatch();\n  \n    const handleOk = () => {\n      setIsModalOpen(false); \n      dispatch(redactContatc({ id: subId, name: subName, number: subNumber })); \n    };\n  \n    const showModal = (name, number, id) => {\n      setSubNumber(number);\n      setSubName(name);\n      setSubId(id);\n      setIsModalOpen(true);\n    };\n  \n    const handleCancel = () => {\n      setIsModalOpen(false);\n    };\n  \n    useEffect(() => {\n      dispatch(fetchContacts()); \n    }, [dispatch]);\n  \n    const { isLoading } = useSelector(state => state.contacts);\n    const contacts = useSelector(state => state.contacts.items);\n    const filterData = useSelector(state => state.filter).toLowerCase(); \n  \n    const visibleContacts = contacts.filter(subscriber =>\n      subscriber.name.toLowerCase().includes(filterData)\n    );\n  \n    return (\n      <section>\n        <Container>\n          <div>\n            {' '}\n            {contacts.length < 1 ? (\n              <Title>Add your first contact</Title>\n            ) : (\n              <Filter />\n            )}\n            <ContactForm />\n            {isLoading && <Spiner />}\n          </div>\n          <List>\n            {visibleContacts.map(({ id, name, number }) => (\n              <Item key={id}>\n                <DivName>\n                  <UserIconList />\n                  {name}:\n                </DivName>\n                <PhoneiconList /> {number}\n                <ButtonRedact\n                  onClick={() => showModal(name, number, id)}\n                  title=\"Edit contact\"\n                >\n                  <EditOutlined />\n                  Edit\n                </ButtonRedact>\n                <Popconfirm\n                  title=\"Are you sure delete this task?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={() => dispatch(deleteContact(id))}\n                >\n                  <Button title=\"delete contact\" type=\"primary\">\n                    <DeleteOutlined /> Delete\n                  </Button>\n                </Popconfirm>\n              </Item>\n            ))}  \n  \n            <ModalRedact\n              title=\"Edit a contact\"\n              open={isModalOpen}\n              onOk={handleOk}\n              onCancel={handleCancel}\n            >\n              <InputForm\n                prefix={<UserIcon />}\n                value={subName} \n                onChange={e => {\n                  setSubName(e.target.value);\n                }}\n              />\n              <InputForm\n                prefix={<PhoneIcon />}\n                value={subNumber}\n                onChange={e => {\n                  setSubNumber(e.target.value);\n                }}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              />\n            </ModalRedact>\n          </List>\n        </Container>\n      </section>\n    );\n  }"],"names":["WrapperFiler","styled","FilterInput","Input","FilterP","Filter","dispatch","useDispatch","filter","useSelector","state","prefix","SearchOutlined","type","value","onChange","e","filtration","target","selectContactsList","contacts","items","AddUserIcon","UserAddOutlined","Form","Label","Button","ContactForm","onCloseModal","onSubmit","preventDefault","form","formName","elements","name","formNumber","number","some","alert","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","pattern","title","required","placeholder","Contactlist","useState","subName","setSubName","subNumber","setSubNumber","subId","setSubId","isModalOpen","setIsModalOpen","useEffect","fetchContacts","isLoading","filterData","toLowerCase","visibleContacts","subscriber","includes","length","map","id","onClick","showModal","EditOutlined","okText","cancelText","onConfirm","deleteContact","DeleteOutlined","open","onOk","redactContatc","onCancel"],"sourceRoot":""}